<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wkmb.dao.FriendDao">

	<!-- 친구 목록 조회(친구 바) -->
	<select id="selectFriendList" parameterType="int" resultType="Friend">
		SELECT f.fuid, f.mode, u.id, u.name, u.sex
			FROM friends f left join users u on f.fuid=u.uid
			WHERE f.uid=#{value}
			ORDER BY u.name, u.id
	</select>

	<!-- 친구 목록 날짜순으로 조회(main) -->
	<select id="selectFriendListByDate" parameterType="int" resultType="Friend">
		SELECT f.uid, f.mode, f.correct_count AS correctCount, f.solve_count AS solveCount
				, f.three_time AS threeTime, f.last_date AS lastDate
				, u.id, u.name, u.sex, u.photo, u.message
			FROM friends f left join users u on f.uid=u.uid
			WHERE f.fuid=#{value}
			ORDER BY f.last_date DESC, f.correct_count/f.solve_count DESC
	</select>

	<!-- 친구 목록 안푼 사람을 제외한 점수순으로 조회(랭킹) -->
	<select id="selectFriendListByScore" parameterType="int" resultType="Friend">
		SELECT f.fuid, f.correct_count AS correctCount, f.solve_count AS solveCount
				, f.last_date AS lastDate, u.id, u.name, u.sex, u.photo
			FROM friends f left join users u on f.fuid=u.uid
			WHERE f.uid=#{value}
			  AND f.last_date IS NOT NULL
			  AND f.mode=0
			ORDER BY f.correct_count/f.solve_count DESC, f.last_date DESC
	</select>
	
	<!-- 내 문제 푼 친구 수 -->
	<select id="selectSolvedFriend" parameterType="int" resultType="int">
		SELECT count(*)
		FROM friends
		WHERE uid=#{value}
		  AND mode=0
		  AND last_date IS NOT NULL
	</select>
	
	<!-- 내가 친구 신청한 목록에 등재 -->
	<insert id="insertFriendMe" parameterType="map">
		INSERT INTO friends(uid, fuid, mode)
			VALUES(#{uid}, #{fuid}, 1)
	</insert>
	
	<!-- 나에게 온 친구 신청 목록에 등재 -->
	<insert id="insertFriendYou" parameterType="map">
		INSERT INTO friends(uid, fuid, mode)
			VALUES(#{fuid}, #{uid}, 2)
	</insert>
	
	<!-- 친구 검색 목록 조회 -->
	<select id="selectSearchFriendList" parameterType="Friend" resultType="Friend">
		SELECT f.uid, f.mode, f.correct_count AS correctCount, f.solve_count AS solveCount
				, f.three_time AS threeTime, f.last_date AS lastDate
				, u.id, u.name, u.sex, u.photo, u.message
			FROM friends f left join users u on f.uid=u.uid
			WHERE f.fuid=#{uid}
			AND u.name LIKE concat('%', #{name}, '%')
			ORDER BY f.last_date DESC, f.correct_count/f.solve_count DESC
	</select>
	
	<select id="selectFriendCount" parameterType="int" resultType="int">
		SELECT count(*)
			FROM friends f left join users u on f.fuid=u.uid
			WHERE f.uid=#{value}
			  AND f.mode=0
	</select>
	
	<update id="updateFriend" parameterType="Friend">
		UPDATE friends
			SET mode=0
			WHERE uid=#{uid}
			  AND fuid=#{fuid}
	</update>
	
	<delete id="deleteFriend" parameterType="Friend">
		DELETE FROM friends
			WHERE uid=#{uid}
			  AND fuid=#{fuid}
	</delete>
	
	<!-- 사용자가 5문제 미만을 입력했더라도 무조건 푼 문제수를 5개씩 카운트 -->
	<update id="updateScore" parameterType="Friend">
		UPDATE friends
			SET correct_count=correct_count+#{correctCount}
				, solve_count=solve_count+5, last_date=now()
			WHERE uid=#{uid}
			  AND fuid=#{fuid}
	</update>
	
	<select id="selectThreeTime" parameterType="Friend" resultType="int">
		SELECT three_time AS threeTime
			FROM friends
			WHERE uid=#{uid}
			  AND fuid=#{fuid}
	</select>
	
	<update id="updateCountThreeTime" parameterType="Friend">
		UPDATE friends
			SET three_time=three_time+1
			WHERE uid=#{uid}
			  AND fuid=#{fuid}
	</update>
	
	<update id="updateClearThreeTime" parameterType="Friend">
		UPDATE friends
			SET three_time=0
			WHERE uid=#{uid}
			  AND fuid=#{fuid}
	</update>
	
	<select id="selectClearFriendList" parameterType="int" resultType="Friend">
		SELECT uid, last_date AS lastDate
			FROM friends
			WHERE fuid=#{fuid}
	</select>

</mapper>